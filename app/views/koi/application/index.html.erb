<% content_for :title, 'Dashboard' %>

<%#= render 'google_analytics' rescue nil %>
<%#= render 'twitter_feed' %>
<%#= render 'reports' %>

<%- 
  widgets = [{
    title: "Weekly page views",
    footer: "This is a footer message",
    type: "google_analytics",
    size: "Small",
    google_analytics: {
      type: "KoiLineChart",
      query: {
        dimensions: "ga:yearWeek",
        metrics: "ga:pageviews",
        sort: "ga:yearWeek"
      },
      settings: {
        simple: true
      },
      chart: {
        showArea: true,
        low: 0
      }
    }
  },{
    title: "Test alert",
    type: "message",
    size: "Small",
    message: {
      className: "error",
      body: "This is a custom alert"
    }
  },{
    title: "This will never load",
    footer: "Isn't the wait exciting, though?",
    type: "loading",
    size: "Small"
  },{
    title: "Something else",
    type: "chart",
    size: "Medium",
    chart: {
      type: "line",
      labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],
      series: [
        [1, 5, 2, 10, 15],
        [1, 3, 4, 5, 6]
      ],
      settings: {
        simple: false
      },
      chart: {
        showArea: true,
        low: 0
      }
    }
  },{
    title: "Twitter Feed",
    type: "twitter",
    size: "Medium",
    twitter: {
      id: "389900838295965696",
      maxTweets: 4,
      enableLinks: true,
      showUser: true,
      showTime: true,
      dateFunction: '',
      showRetweet: true
    }
  }]
-%>

<div class="row flipppable_cards">
  <%- widgets.each_with_index do |widget,index| -%>
    <%- 
      type = widget[:type]
      className = "col-1-1"
      if widget[:size].eql?("Small")
        className = "col-1-3 col-1-1m"
      elsif widget[:size].eql?("Medium")
        className = "col-1-2 col-1-1m"
      end
    -%>
    <div class="<%= className -%>">
      <div class="card card__widget-<%= type.parameterize -%>" data-card>
        <div class="card--sides">
          <div class="card--front" data-card-front>
            <div class="card--heading">
              <div class="card--heading--label">
                <%= widget[:title] -%>
              </div>
              <div class="card--heading--icon">
                <a href="#" data-card-toggle>
                  <%= icon("cog_filled") -%>
                </a>
              </div>
            </div>
            <div class="card--body">
              <%- if type.eql?("message") -%>
                <%- data = widget[:message] -%>
                <div class="card--body--section <%= data[:className] -%>">
                  <%= data[:body] -%>
                </div>
              <%- elsif type.eql?("loading") -%>
                <div class="card--body--section card--body--section__loading">
                  <%= icon("spinner") -%>
                </div>
              <%- else -%>
                <%= 
                  begin 
                    render("/koi/application/dashboard_widgets/#{type}", widget: widget, index: index) 
                  rescue ActionView::MissingTemplate
                    render("/koi/application/dashboard_widgets/unknown_widget_type")
                  end
                -%>
              <%- end -%>
            </div>
            <%- if widget[:footer] -%>
              <div class="card--footer">
                <%= widget[:footer] -%>
              </div>
            <%- end -%>
          </div>
          <div class="card--back" data-card-back>
            <div class="card--heading">
              <div class="card--heading--label">
                <%= widget[:title] -%>
              </div>
            </div>
            <div class="card--body">
              <div class="card--body--section">
                <div class="inputs">
                  <div class="control-group check_boxes optional super_hero_powers form--enhanced">
                    <label class="control-label">Widget Title</label>
                    <div class="controls">
                      <input type="text" value="<%= widget[:title] -%>" />
                    </div>
                  </div>
                  <div class="control-group check_boxes optional super_hero_powers form--enhanced">
                    <label class="control-label">Size</label>
                    <div class="controls">
                      <%- size_options = ["Small", "Medium", "Large"] -%>
                      <%- size_options.each do |size| -%>
                        <span class="radio">
                          <label>
                            <input class="check_boxes required" id="size_<%= size.downcase -%>" type="radio" name="<%= index -%>_size" value="true" <%= "checked" if size.eql?(widget[:size]) -%>>
                            <%= size -%>
                          </label>
                        </span>
                      <%- end -%>
                    </div>
                  </div>
                </div>
              </div>
              <%= 
                begin 
                  render("/koi/application/dashboard_widgets/#{type}_options", widget: widget, index: index) 
                rescue ActionView::MissingTemplate
                  nil
                end
              -%>
              <div class="card--body--section">
                <div class="button-group">
                  <div>
                    <button class="button__success" data-card-toggle>Save</button>
                  </div>
                  <div>
                    <button class="button__cancel" data-card-toggle>Cancel</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  <%- end -%>
</div>

<script>

  $(document).on("ornament:refresh", function(){

    // ===========================
    // Setup
    // ===========================

    var Cards = Ornament.Cards = {};
    Cards.selectors = {
      card: "data-card",
      cardFront: "data-card-front",
      cardBack: "data-card-back",
      cardFlipper: "data-card-toggle"
    }
    Cards.classes = {
      flipped: "card__flipped"
    }
    Cards.settings = {
      flipTiming: 200
    }

    // ===========================
    // Helpers
    // ===========================

    Cards.isCardFlipped = function($card) {
      return $card.is("." + Cards.classes.flipped);
    }

    Cards.getVisibleSide = function($card) {
      if(Cards.isCardFlipped($card)) {
        return Ornament.findData(Cards.selectors.cardBack, false, $card);
      } else {
        return Ornament.findData(Cards.selectors.cardFront, false, $card);
      }
    }

    // ===========================
    // Behaviours
    // ===========================

    // Flip a card
    Cards.flipCard = function($card, side){
      side = side || false;
      if(!side) {
        var flipped = Cards.isCardFlipped($card);
        side = flipped ? "front" : "back";
      }
      if(side && side === "front") {
        $card.removeClass(Cards.classes.flipped);
      } else if(side && side === "back") {
        $card.addClass(Cards.classes.flipped);
      }
      setTimeout(_ => {
         Cards.sizeCard($card);
      }, Cards.settings.flipTiming);
      return $card;
    }

    Cards.safeClone = function($card) {
      var $clone = $card.clone();
      $clone.css({
        "position": "static",
        "visibility": "hidden"
      });
      $clone.find("[name]").each(function(){
        var $el = $(this);
        var oldName = $el.attr("name", $el.attr("name") + "__clone");
      });
      return $clone;
    }

    // Resize card to the visible side
    Cards.sizeCard = function($card) {
      var $card = $($card);
      var $visibleSide = Cards.getVisibleSide($card);
      var $cloneSide = Cards.safeClone($visibleSide);
      $card.append($cloneSide);
      var height = $cloneSide.outerHeight();
      $cloneSide.remove();
      $card.height(height);
      return height;
    }

    Cards.sizeCardForClosest = function($element) {
      var $card = $element.closest("[" + Ornament.Cards.selectors.card + "]");
      Cards.sizeCard($card);
    };

    // ===========================
    // Events and Binds
    // ===========================

    Cards.toggleEvent = function(event) {
      event.preventDefault();
      var $flipper = $(event.target);
      var side = $flipper.attr(Cards.selectors.cardFlipper);
      var $card = $flipper.closest("[" + Cards.selectors.card + "]");
      Cards.flipCard($card, side);
      return true;
    }

    // ===========================
    // Init Cards
    // ===========================

    Cards.init = function(){
      Cards.$cards = Ornament.findData(Cards.selectors.card);
      Cards.$toggles = Ornament.findData(Cards.selectors.cardFlipper);
      if(Cards.$cards) {
        $.each(Cards.$cards, function(){
          Cards.sizeCard($(this));
        });
      }
      if(Cards.$toggles) {
        $.each(Cards.$toggles, function() {
          $(this).off("click", Cards.toggleEvent).on("click", Cards.toggleEvent);
        });
      }
    }

    // Run it all 
    Cards.init();

    // ===========================
    // Widget Types
    // ===========================

    Widgets = Ornament.Widgets = {};

  });

</script>

<style>
  .twitter-list--item + .twitter-list--item {
    margin-top: 16px;
    padding-top: 16px;
    border-top: 1px solid #ccc;
  }
  .twitter-list--item .user a {
    overflow: hidden;
  }
  .twitter-list--item .user a > span {
    display: block;
  }
  .twitter-list--item .user a > span[data-scribe='element:verified_badge'] {
    display: none;
  }
  .twitter-list--item .user a > span:first-child {
    width: 20px;
    float: left;
    margin-right: 8px;
    margin-top: 4px;
  }
</style>