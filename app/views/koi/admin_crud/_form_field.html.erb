<%=
  crud_settings = resource_class.crud.find(:fields, attr)

  wrapper_opts = {
    class: "form--enhanced ",
    data: {}
  }

  input_opts = {
    class: "",
    data: {}
  }

  if crud_settings 
    if crud_settings[:wrapper_data]
      wrapper_opts[:data] = crud_settings[:wrapper_data]
    end
    if crud_settings[:input_data]
      input_opts[:data] = crud_settings[:input_data]
    end
    if crud_settings[:datepicker]
      crud_settings[:datepicker].each do |opt,val| 
        input_opts[:data]["datepicker_#{opt}"] = val
      end
    end
  end

  if crud_settings && crud_settings[:size]
    input_opts[:class] += " form--#{crud_settings[:size]}" 
  else
    input_opts[:class] += "form--medium"
  end

  begin
    render crud_partial(attr, :form, f.object.class), :f => f, :attr => attr, wrapper_opts: wrapper_opts, input_opts: input_opts
  rescue ActionView::MissingTemplate
    render "form_field_default", :f => f, :attr => attr, wrapper_opts: wrapper_opts, input_opts: input_opts
  end
%>
