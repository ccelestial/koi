//= require ./etc/plupload.js
//= require ./etc/plupload.html4.js
//= require ./etc/plupload.html5.js
//= require ./etc/plupload.flash.js
//= require ./jquery/ui/tagify

$ (function ()
{
  function truncate (string)
	{
    return string.length < 20 ? string : string.substr (0, 20) + "&hellip;"
  }

  var $form             = $ ("#upload-form")
  var $fileList         = $ ('#upload-files')
  var $buttonUpload     = $ ('#upload-button-upload')
  var $tagFieldContents = $ ("#tag-field *")
  var $tagInput         = $tagFieldContents.filter ("input").first ()
  var uploader;

  $tagFieldContents.show ()

  $ ('.insert.asset.application').application (function (insertion)
  {
    insertion.submit (function ()
    {
      var params = $.deparam (insertion.serialize ()).asset
      var width  = params.width
      var url    = params.url

      if (width) url += '?width=' + width

      for (var key in params) if (params.hasOwnProperty (key)) try { params [key] = eval (params [key]) } catch (ex) {}

      var CKEditorFuncNum = location.href.match (/[?&]CKEditorFuncNum=([^&]+)/i) [1]

      window.opener.CKEDITOR.tools.callFunction (CKEditorFuncNum, url)
      window.close ()

      return false
    });

  });

  var myTextArea = $('textarea.tagify').tagify({
    addTagPrompt: "e.g. accounting",
    cssClass: "tagify buttons tagify-container"
  })

  myTextArea.tagify('inputField').autocomplete({
    source: <%= Asset.tag_counts.collect { |t| t.name } %>,
    position: { of: myTextArea.tagify('containerDiv') },
    close: function(event, ui) { myTextArea.tagify('add'); },
  });

  window.myTextArea = myTextArea;

  myTextArea.closest("form").submit( function() {
    myTextArea.tagify('add');
    myTextArea.tagify('serialize');
  });

})
